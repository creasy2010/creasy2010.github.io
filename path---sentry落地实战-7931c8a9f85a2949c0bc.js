webpackJsonp([0xe540519c3c43],{794:function(e,t){e.exports={data:{post:{id:"/Users/dong/workbench/qmfe/creasy2010.github.io/manager/content/posts/2018-09-19--sentry落地实战/index.md absPath of file >>> MarkdownRemark",html:'<p>sentry 翻译过来是 哨兵,寓意着像哨兵一样守护应用;\n它是一个完善,开放的 error trace 工具,围绕”Stop hoping your users will report errors”的理念,提供一系列工具,帮助 coder 快速定位问题,发现问题,解决问题;</p>\n<p>一个项目经常会遇到以下问题(如果没有遇到可以忽略此文,好幸运):</p>\n<blockquote>\n<p>需要用户的帐号密码才能复现问题;<br>\n用户那里有问题,在开发这边怎么也复现不了,也不清楚用户环境信息;\n每次出问题都是从前端定位到后端,一系列流程之后才找到原因;\n项目人员的更替流失,找不到谁维护项目;\n每次出问题自己都是最后一个知道;\n线上事故似乎总会冷不防的蹦出来,不能安安静静的写代码;\n上线时出现问题,并不能第一时间发现,导致影响用户最终被怼的还是我们;</p>\n</blockquote>\n<p>…</p>\n<p>coder 是为了解决问题而生的工程师, 如果上面的问题你遇到 3 个或 3 个以上,那很不幸,估计眼中噙着泪水, 心中一 W 个草尼马在奔腾;\n然并卵,真不幸遇到了这些问题,该如何解决呢 ? 下面为大家介绍下我的实践;</p>\n<h3>特性</h3>\n<p>对比了一票工具, 最终选择了 sentry,基于以下理由;</p>\n<blockquote>\n<p>多端覆盖: 我们能想到的语言也好端也好基本都有对应的 SDK, 像小程序也有社区提供的 SDK;\ncoder style: 完整对接开发工具栈(github,jira,slack…),开放 openapi 支持扩展任意;连独立部署都提供 docker,真是不能太周到体贴;\n产品细致到位: sourcemap,suspect commit,suggested assignees,alert rule 等在实际使用时让人倍感关怀,似乎能想到的,都已经做到;</p>\n</blockquote>\n<p>下面会详细说明这些特性:</p>\n<h4>vocabulary</h4>\n<p>把 sentry 涉及到的词汇整理出来:</p>\n<ul>\n<li>Issue:与 githubissue 同义, 问题;一个 issue 可以发生多次 event;</li>\n<li>Event:一个问题发生的一次,会聚合到一个 issue;</li>\n<li>SourceMap:压缩后代码映射到压缩前的信息,可以获取在错误源代码的文件路径,行号 列号,有利于定位问题;</li>\n<li>FeedBack:用户反馈,当发生问题时,弹出对话框,可以让用户填写信息,描述错误影响及发生错误的场景;</li>\n<li>Release:发布的版本;</li>\n<li>Breadcrumb:童话里的面包屑,在问题发生之前的一些动作, 可以自己记录一些信息(用户点击动作),在 raven sdk 默认会把 console 打印信息记录下来,通过配置可以记录 http 请求 (<a href="https://docs.sentry.io/learn/breadcrumbs/">https://docs.sentry.io/learn/breadcrumbs/</a>)</li>\n<li>Dsn( Data Source Name):<a href="https://docs.sentry.io/quickstart/#about-the-dsn">https://docs.sentry.io/quickstart/#about-the-dsn</a> 格式:https://<key>@sentry.io/<project>,包含上传协议,key 服务地址,项目标识</li>\n<li>Suspect Commit:commit 语义同 githubcommit,即一次提交,suspect commit 表示出现的问题可能与某次 commit 有关联;</li>\n</ul>\n<h4>主动上报问题;</h4>\n<p>sentry 的基本职责,当出现问题时,把错误现场信息,一些调试必要的业务信息及用户信息带到服务端;\n当采集一段时间,我们就能知道一段时间发生了多少错,某个版本发生了多少错,影响了多少用户;\n再通过告警,让我们第一时间感知到问题所在,进行修复,当用户反馈时,我们可以自豪的说,“已经上线了或正在上线中”;</p>\n<h4>如何与 github 完美结合</h4>\n<p>sentry 与 github 的结合与可谓深入浅出,浅在简单易用,深在巧妙利用 issue commit coder 的关联;\n先问一个问题?sentry 与 github 结合能给我们带来什么?</p>\n<ol>\n<li>把问题相关的 commit 展示出来;</li>\n<li>选出最适合改这个 bug 的人;</li>\n<li>两个版本之间的 commit 列出来;</li>\n</ol>\n<p>注:\n第二项,完美实现了这些,当问题发生时,任何一个人都可以分配问题,而不是一定要 TeamLeader 来做这件事,</p>\n<p>下面详细说明如何实现:</p>\n<p>与此相关的概念: Issue,Event,Release,Suspect Commit;</p>\n<p>首先在项目中授权项目的 github 地址;</p>\n<p>当我们发布版本时,设置一个 hook 把版本及 coomit 信息通知到 sentry;</p>\n<p>当采集到问题时, 把问题的版本 version 关联上来;</p>\n<p>这样就完成了. 对, 就这么简单! 然后呢 ? 以 js 为例说明</p>\n<p>首先,根据上传的问题 call stack 分析到是那个 js 出了问题;\n然后根据 js 中 sourcemap 信息推断出源代码的 path line colume,方便用户调试;\n接着分析源代码的相关 commit 及 coder;</p>\n<p>然后一切就明清晰了;</p>\n<h4>多端覆盖</h4>\n<p>sentry 目前最新版本 9.0 算得上老牌厂商了, 我们能用得上的语言他基本都可以支持;小程序的采集与有社区贡献代码;</p>\n<h4>openapi(<a href="https://docs.sentry.io/api/">https://docs.sentry.io/api/</a>)</h4>\n<p>借助于 openapi 几乎可以做到所有的事情(项目管理,issue 管理),像第三方工具对接,</p>\n<h4>问题处理流程</h4>\n<p>我们的愿景是对问题主动出击,那么如何实现主动,如何在第一时间感知问题?\nsentry 提供了 email 与 webhook;基于 webhook 可以把问题简略信息发布到钉钉,企业微信或个人微信;让我们能第一时间感知</p>\n<p>也许有经验的小伙伴会反驳,告警群里一直反馈问题不定的报警,会引发 coder 的反感,最终演化成狼来了的故事;\n为了避免陷入这种困境,一定要有一个原则:“所报出的问题,都是有价值的,都是值得追踪的”;\nsentry 为我们提供了灵活的报警策略,实现这个目标:</p>\n<p>项目中肯定会有报错是低优先级的,不影响流程的,这种错误可以借助 sentry 统计起来, 一周或一个月集中处理;(这个时候是不是锻炼新队员的好时候,哈哈.)</p>\n<h4>知识积累及问题回顾</h4>\n<h3>遇到的一些问题</h3>\n<h4>服务端日志处理</h4>\n<p>服务端日志采集;</p>\n<h2>总结</h2>\n<p>如果让我用一句话来总结 sentry,我想说:“改变了对问题的态度,从被 push 到 pull, 从此运筹帷幄,可以安安静静写代码!“;</p>\n<h2>问题</h2>\n<blockquote>\n<p>开源与 sass 的</p>\n</blockquote>\n<h2>相关资料</h2>',htmlAst:{type:"root",children:[{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"sentry 翻译过来是 哨兵,寓意着像哨兵一样守护应用;\n它是一个完善,开放的 error trace 工具,围绕”Stop hoping your users will report errors”的理念,提供一系列工具,帮助 coder 快速定位问题,发现问题,解决问题;"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"一个项目经常会遇到以下问题(如果没有遇到可以忽略此文,好幸运):"}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"需要用户的帐号密码才能复现问题;"},{type:"element",tagName:"br",properties:{},children:[]},{type:"text",value:"\n用户那里有问题,在开发这边怎么也复现不了,也不清楚用户环境信息;\n每次出问题都是从前端定位到后端,一系列流程之后才找到原因;\n项目人员的更替流失,找不到谁维护项目;\n每次出问题自己都是最后一个知道;\n线上事故似乎总会冷不防的蹦出来,不能安安静静的写代码;\n上线时出现问题,并不能第一时间发现,导致影响用户最终被怼的还是我们;"}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"…"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"coder 是为了解决问题而生的工程师, 如果上面的问题你遇到 3 个或 3 个以上,那很不幸,估计眼中噙着泪水, 心中一 W 个草尼马在奔腾;\n然并卵,真不幸遇到了这些问题,该如何解决呢 ? 下面为大家介绍下我的实践;"}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"特性"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"对比了一票工具, 最终选择了 sentry,基于以下理由;"}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"多端覆盖: 我们能想到的语言也好端也好基本都有对应的 SDK, 像小程序也有社区提供的 SDK;\ncoder style: 完整对接开发工具栈(github,jira,slack…),开放 openapi 支持扩展任意;连独立部署都提供 docker,真是不能太周到体贴;\n产品细致到位: sourcemap,suspect commit,suggested assignees,alert rule 等在实际使用时让人倍感关怀,似乎能想到的,都已经做到;"}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"下面会详细说明这些特性:"}]},{type:"text",value:"\n"},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"vocabulary"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"把 sentry 涉及到的词汇整理出来:"}]},{type:"text",value:"\n"},{type:"element",tagName:"ul",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Issue:与 githubissue 同义, 问题;一个 issue 可以发生多次 event;"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Event:一个问题发生的一次,会聚合到一个 issue;"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"SourceMap:压缩后代码映射到压缩前的信息,可以获取在错误源代码的文件路径,行号 列号,有利于定位问题;"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"FeedBack:用户反馈,当发生问题时,弹出对话框,可以让用户填写信息,描述错误影响及发生错误的场景;"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Release:发布的版本;"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Breadcrumb:童话里的面包屑,在问题发生之前的一些动作, 可以自己记录一些信息(用户点击动作),在 raven sdk 默认会把 console 打印信息记录下来,通过配置可以记录 http 请求 ("},{type:"element",tagName:"a",properties:{href:"https://docs.sentry.io/learn/breadcrumbs/"},children:[{type:"text",value:"https://docs.sentry.io/learn/breadcrumbs/"}]},{type:"text",value:")"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Dsn( Data Source Name):"},{type:"element",tagName:"a",properties:{href:"https://docs.sentry.io/quickstart/#about-the-dsn"},children:[{type:"text",value:"https://docs.sentry.io/quickstart/#about-the-dsn"}]},{type:"text",value:" 格式:https://"},{type:"element",tagName:"key",properties:{},children:[{type:"text",value:"@sentry.io/"},{type:"element",tagName:"project",properties:{},children:[{type:"text",value:",包含上传协议,key 服务地址,项目标识"}]}]}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Suspect Commit:commit 语义同 githubcommit,即一次提交,suspect commit 表示出现的问题可能与某次 commit 有关联;"}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"主动上报问题;"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"sentry 的基本职责,当出现问题时,把错误现场信息,一些调试必要的业务信息及用户信息带到服务端;\n当采集一段时间,我们就能知道一段时间发生了多少错,某个版本发生了多少错,影响了多少用户;\n再通过告警,让我们第一时间感知到问题所在,进行修复,当用户反馈时,我们可以自豪的说,“已经上线了或正在上线中”;"}]},{type:"text",value:"\n"},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"如何与 github 完美结合"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"sentry 与 github 的结合与可谓深入浅出,浅在简单易用,深在巧妙利用 issue commit coder 的关联;\n先问一个问题?sentry 与 github 结合能给我们带来什么?"}]},{type:"text",value:"\n"},{type:"element",tagName:"ol",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"把问题相关的 commit 展示出来;"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"选出最适合改这个 bug 的人;"}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"两个版本之间的 commit 列出来;"}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"注:\n第二项,完美实现了这些,当问题发生时,任何一个人都可以分配问题,而不是一定要 TeamLeader 来做这件事,"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"下面详细说明如何实现:"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"与此相关的概念: Issue,Event,Release,Suspect Commit;"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"首先在项目中授权项目的 github 地址;"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"当我们发布版本时,设置一个 hook 把版本及 coomit 信息通知到 sentry;"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"当采集到问题时, 把问题的版本 version 关联上来;"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"这样就完成了. 对, 就这么简单! 然后呢 ? 以 js 为例说明"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"首先,根据上传的问题 call stack 分析到是那个 js 出了问题;\n然后根据 js 中 sourcemap 信息推断出源代码的 path line colume,方便用户调试;\n接着分析源代码的相关 commit 及 coder;"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"然后一切就明清晰了;"}]},{type:"text",value:"\n"},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"多端覆盖"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"sentry 目前最新版本 9.0 算得上老牌厂商了, 我们能用得上的语言他基本都可以支持;小程序的采集与有社区贡献代码;"}]},{type:"text",value:"\n"},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"openapi("},{type:"element",tagName:"a",properties:{href:"https://docs.sentry.io/api/"},children:[{type:"text",value:"https://docs.sentry.io/api/"}]},{type:"text",value:")"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"借助于 openapi 几乎可以做到所有的事情(项目管理,issue 管理),像第三方工具对接,"}]},{type:"text",value:"\n"},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"问题处理流程"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"我们的愿景是对问题主动出击,那么如何实现主动,如何在第一时间感知问题?\nsentry 提供了 email 与 webhook;基于 webhook 可以把问题简略信息发布到钉钉,企业微信或个人微信;让我们能第一时间感知"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"也许有经验的小伙伴会反驳,告警群里一直反馈问题不定的报警,会引发 coder 的反感,最终演化成狼来了的故事;\n为了避免陷入这种困境,一定要有一个原则:“所报出的问题,都是有价值的,都是值得追踪的”;\nsentry 为我们提供了灵活的报警策略,实现这个目标:"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"项目中肯定会有报错是低优先级的,不影响流程的,这种错误可以借助 sentry 统计起来, 一周或一个月集中处理;(这个时候是不是锻炼新队员的好时候,哈哈.)"}]},{type:"text",value:"\n"},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"知识积累及问题回顾"}]},{type:"text",value:"\n"},{type:"element",tagName:"h3",properties:{},children:[{type:"text",value:"遇到的一些问题"}]},{type:"text",value:"\n"},{type:"element",tagName:"h4",properties:{},children:[{type:"text",value:"服务端日志处理"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"服务端日志采集;"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"总结"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"如果让我用一句话来总结 sentry,我想说:“改变了对问题的态度,从被 push 到 pull, 从此运筹帷幄,可以安安静静写代码!“;"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"问题"}]},{type:"text",value:"\n"},{type:"element",tagName:"blockquote",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"开源与 sass 的"}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"相关资料"}]}],data:{quirksMode:!1}},fields:{slug:"/sentry落地实战/",prefix:"2018-09-19"},frontmatter:{title:"sentry落地实战",subTitle:"如何让sentry真正起到作用",cover:{childImageSharp:{resize:{src:"/static/sentry-logo-ddfb822e9447c2c1a9f72b35e7a9ad4c-160fa.png"}}}}},author:{id:"/Users/dong/workbench/qmfe/creasy2010.github.io/manager/content/parts/author.md absPath of file >>> MarkdownRemark",html:'<p><strong>Mr. Gatsby</strong> Proin ornare ligula eu tellus tempus elementum. Aenean <a href="/">bibendum</a> iaculis mi, nec blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus. :hearts:</p>'},footnote:{id:"/Users/dong/workbench/qmfe/creasy2010.github.io/manager/content/parts/footnote.md absPath of file >>> MarkdownRemark",html:'<p>I am a coder who solves the problem<img src="/about/" alt="contact"></p>'},site:{siteMetadata:{facebook:{appId:"coder.yang2001@gmail.com"}}}},pathContext:{slug:"/sentry落地实战/"}}}});
//# sourceMappingURL=path---sentry落地实战-7931c8a9f85a2949c0bc.js.map